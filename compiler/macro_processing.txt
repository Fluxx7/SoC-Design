INCLUDE tests/stack_macros.txt

DEFINE addr 0x6001
DEFINE dispAddr 0x6002

A = 256
D = A
A = SP
*A = D
A = 0x4000
D = A
A = dispAddr
*A = D
A = main
JMP

main:

A = ARGS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
D = A
A = 0
D = D - A
A = ARGS
*A = D
A = LOCALS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = returnAddress
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = waitSync
JMP
returnAddress:

A = SP
A *A = *A - 1
D = *A
A = LOCALS
*A = D
A = SP
A *A = *A - 1
D = *A
A = 3
*A = D
A = ARGS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D
A = 3
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = ARGS
*A = D
A = RETVAL
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = end
D ; JEQ
A = ARGS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
D = A
A = 0
D = D - A
A = ARGS
*A = D
A = LOCALS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = returnAddress
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = render
JMP
returnAddress:

A = SP
A *A = *A - 1
D = *A
A = LOCALS
*A = D
A = SP
A *A = *A - 1
D = *A
A = 3
*A = D
A = ARGS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D
A = 3
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = ARGS
*A = D
A = RETVAL
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 0x20
D = A
A = dispAddr
*A = D + *A
A = main
JMP

waitSync:
A = SP
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = LOCALS
*A = D
A = SP
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 1
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
A *A = *A - 1
A = *A
D = D+A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D

LABEL wait_sync:
A = addr
D = *A
A = 2
D = D & A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 0
D = A
A = LOCALS
D = D + *A
A = SP
A *A = *A - 1
A = *A
A = D + A
D = A - D
A = A - D
*A = D

loop_sync:
A = addr
D = *A
A = 2
D = D & A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 0
D = A
A = LOCALS
D = D + *A
A = D
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
A *A = *A - 1
A = *A
D = D - A
A = loop_sync
D ; JEQ


A = addr
D = *A
A = 1
D = D & A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = RETVAL
*A = D
A = LOCALS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D
A = SP
A *A = *A - 1
A = *A
JMP

render:
A = SP
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = LOCALS
*A = D
A = SP
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 1
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
A *A = *A - 1
A = *A
D = D+A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D
A = 0
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 0
D = A
A = LOCALS
D = D + *A
A = SP
A *A = *A - 1
A = *A
A = D + A
D = A - D
A = A - D
*A = D

render_loop:
A = ARGS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
D = A
A = 0
D = D - A
A = ARGS
*A = D
A = LOCALS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = returnAddress
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = waitSync
JMP
returnAddress:

A = SP
A *A = *A - 1
D = *A
A = LOCALS
*A = D
A = SP
A *A = *A - 1
D = *A
A = 3
*A = D
A = ARGS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D
A = 3
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = ARGS
*A = D
A = RETVAL
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = dispAddr
A = *A
D = D + *A
*A = D + *A
A = 0
D = A
A = LOCALS
D = D + *A
A = D
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 1
D = A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
A *A = *A - 1
A = *A
D = D+A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = 0
D = A
A = LOCALS
D = D + *A
A = SP
A *A = *A - 1
A = *A
A = D + A
D = A - D
A = A - D
*A = D
A = 16
D = A - D
A = render_return
D ; JEQ
A = render_loop
JMP

render_return:
A = SP
A *A = *A - 1
D = *A
A = RETVAL
*A = D
A = LOCALS
D = *A
A = SP
A *A = *A + 1
A = A - 1
*A = D
A = SP
A *A = *A - 1
D = *A
A = SP
*A = D
A = SP
A *A = *A - 1
A = *A
JMP


end:

